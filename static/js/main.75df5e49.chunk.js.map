{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","useState","searchinput","setSearchinput","temp","setTemp","setMax","location","setLocation","setWeather","des","setDes","setSunset","setMin","wind","setWind","setData","getdata","a","axios","data","country","sys","Math","floor","main","Max","temp_max","Min","temp_min","Tempfull","city","name","weather","description","sunrise","Date","sunset","speed","sun","console","log","className","type","placeholder","onChange","e","target","value","onClick","class","App","style","textAlign","color","letterSpacing","textTransform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75df5e49.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst Weather = (props) => {\r\n\r\n    const [searchinput,setSearchinput]=useState('');\r\n    const[temp,setTemp]=useState('');\r\n    const[Max,setMax]=useState('');\r\n    const[location,setLocation]=useState('');\r\n    const[weather,setWeather]=useState('');\r\n    const[des,setDes]=useState('');\r\n    const[sunrise,setSunrise]=useState([]);\r\n    const[sunset,setSunset]=useState([]);\r\n    const[min,setMin]=useState('');\r\n    const[country,setCountry]=useState('');\r\n    const[wind,setWind]=useState(''); \r\n    const[data,setData]=useState('');\r\n\r\n\r\n    const mychange=(e)=>{\r\n        setSearchinput(e.target.value);\r\n    }\r\n\r\n/*    componentDidMount(){\r\n        getdata(\"bangalore\");\r\n    }\r\n   */\r\n\r\n \r\n\r\n    const getdata = async () =>{\r\n        const data=await axios(`https://api.openweathermap.org/data/2.5/weather?q=${searchinput}&APPID=393e346e7cda6cd192a950a31cb11307`);\r\n        setData(data);\r\n        const country=(data.data.sys.country);\r\n        const temp=Math.floor(data.data.main.temp-273.15);\r\n        const Max=Math.floor(data.data.main.temp_max-273.15);\r\n        const Min=Math.floor(data.data.main.temp_min-273.15);\r\n        const Tempfull=(` temperature:${temp}  max-temp:${Max}  min-temp:${Min} deg celcius` );\r\n        const city=(`${data.data.name}`);\r\n        const weather=(` weather is ${data.data.weather[0].main}`);\r\n        const des=(`${data.data.weather[0].description}`);\r\n        const sunrise=new Date(data.data.sys['sunrise']*1000);\r\n        const sunset=new Date(data.data.sys['sunset']*1000);\r\n        const wind=(data.data.wind.speed);\r\n        setWind(wind);\r\n        const sun= (`${sunrise} ${sunset}`)\r\n        setTemp(temp);\r\n        setMax(Max);\r\n        setMin(Min);\r\n        console.log(Tempfull);\r\n        setLocation(city);\r\n        setWeather(weather);\r\n        setDes(des);\r\n/*        console.log(sunrise);\r\n        setSunrise(sunrise);\r\n        setSunset(sunset);*/\r\n        setSunset(sun);\r\n        console.log(country);\r\n        console.log(sunrise);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n        <div className=\"searchbar\">\r\n        <input type=\"text\" placeholder=\"bangalore\"  onChange={mychange}/>\r\n        <button onClick={getdata}><i class=\"fas fa-rocket\"></i></button>\r\n        </div>\r\n            <div className=\"data\">\r\n                <h1>{temp} <i class=\"fas fa-temperature-low\"></i></h1>\r\n                <h1>{des} <i class=\"fas fa-cloud-sun\"></i></h1>\r\n                <h1><i class=\"fas fa-wind\"></i> {wind} km/hr</h1>\r\n                <h1>{location} <i class=\"fas fa-map-marker-alt\"></i></h1>\r\n            </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather;","import './App.css';\nimport Weather from './Weather.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{textAlign:\"center\",color:\"#ffff\",letterSpacing:\"4px\",\n      \ttextTransform:'uppercase'\n  \t\t}}>\n      Weather app</h1>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}